_LF : "\n"
_EQ : "="
_SP : " "
PERIOD : "."
COLON : ":"

NOT_LF : /[^\n]+/

DIGIT : /[0-9]/
DIGITS : DIGIT+
TIMESTAMP : DIGITS COLON DIGITS COLON DIGITS PERIOD DIGITS
DURATION : DIGITS PERIOD DIGITS

start : line+
line : pid _SP+ timestamp _SP body _LF
timestamp : DIGITS ":" DIGITS ":" DIGITS "." DIGITS
pid: DIGITS
body : error_body | alert_body | stop_body | resumed_syscall | unfinished_syscall | syscall

error_body : "strace:" /(.+)/ -> error

alert_body : "+++" _SP /[^\+]+/ "+++"

stop_body : "---" _SP flag _SP stop_data _SP "---"

flag :  SIGNAL  -> signal
stop_data : _syscall_arg -> data

resumed_syscall : "<..." _SP syscall_name _SP "resumed>" resumed_args ")" _SP+ "=" _SP+ syscall_result
unfinished_syscall : syscall_name "(" syscall_args ","? _SP* "<unfinished ...>" _SP*

syscall : syscall_name "(" syscall_args ")" _SP+ "=" _SP+ syscall_result (_SP syscall_duration)?
syscall_name : /[a-z0-9A-Z_]+/ -> name
resumed_args : (_SP* _syscall_arg ","?)* -> args
syscall_args : _syscall_arg? ("," _SP _syscall_arg)* -> args
_syscall_arg : file_descriptor
             | string
             | braced
             | bracketed
             | key_value
             | function_like
             | sigset
             | number
             | other


//syscall_result : NOT_LF -> result
syscall_result : /([0-9]+)/ -> number
               | address
               | file_descriptor
               | r_error
               | /[^\n]/ -> other

address : /0x([0-9a-fA-F])*/

r_error : r_error_code _SP? r_error_message
r_error_code : /-[0-9]+/ -> r_value
             | /\?/ -> r_unknown
r_error_message : NOT_LF -> message

syscall_duration : "<" DURATION ">" -> duration

file_descriptor : fd_path "<" fpath ">"
fd_path : DIGITS -> fd
fpath:  /[^:]+/ ":[[" /[^\]]+/ "]:" DIGITS "->[" /[^\]]+/ "]:" DIGITS "]" -> socket_path
      | /[^:]+/ ":[" /[^:]+/ ":" DIGITS "->" /[^:]+/ ":" DIGITS "]" -> socket_path
      | /[^:]+/ ":[" /[^:]+/ ":" DIGITS "]" -> local_socket_path
      | /[^:]+/ ":[" DIGITS "]" -> socket_ino_path
      | /(.(?!(>\,|>\)|>\n)))*./ -> file_path

bracketed : "[" syscall_args "]"
braced : "{" syscall_args "}"
key_value : key_value_key "=" key_value_value
key_value_key : /[a-zA-Z_0-9]+/ -> key
key_value_value : _syscall_arg -> value
function_like : /[a-zA-Z_]+/ "(" syscall_args ")"

NEGATED : "~"
SIGNAL : /[0-9A-Z_]+/
sigset : NEGATED? "[" SIGNAL? (_SP SIGNAL)* "]"

string : /"[^"\\]*(?:\\.[^"\\]*)*"/ ellipsis?

ellipsis : "..."

number : DIGITS+

// Anything else
// other : /[^,)}\]]+/
other : /(.(?!(<unfinished)))*[^\,\)\}\]]/
      | /(.(?![\,\)\}\]]\s))*[^\,\)\}\]]/

